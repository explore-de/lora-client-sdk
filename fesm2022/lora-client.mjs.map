{"version":3,"file":"lora-client.mjs","sources":["../../../src/lora-client/src/types/ClientError.ts","../../../src/lora-client/src/services/lora-client.service.ts","../../../src/lora-client/src/lib/message/message.component.ts","../../../src/lora-client/src/lib/message-input/message-input.component.ts","../../../src/lora-client/src/lib/message-send/message-send.component.ts","../../../src/lora-client/src/lib/messages/messages.component.ts","../../../src/lora-client/src/lib/client/lora-client.component.ts","../../../src/lora-client/src/index.ts","../../../src/lora-client/src/lora-client.ts"],"sourcesContent":["export default class ClientError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ClientMessage} from \"../types/ClientMessage\";\nimport ClientError from \"../types/ClientError\";\n\nexport enum ConnectionStatus {\n  DISCONNECTED = 'disconnected',\n  CONNECTED = 'connected',\n  CONNECTING = 'connecting',\n  ERROR = 'error',\n}\n\nenum MessageStatus {\n  Pending,\n  Sent,\n}\n\ntype MessageQueueMessage = { id: string, content: any, status: MessageStatus };\ntype Events = 'message' | 'status';\n\ninterface EventListeners {\n  message: (message: ClientMessage) => void;\n  status: (status: ConnectionStatus) => void;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LoraClientService {\n  private url: string | undefined = undefined;\n  private socket: WebSocket | null = null;\n  private isConnected: boolean = false;\n  private isError: boolean = false;\n  private messages: ClientMessage[] = [];\n  private messagesQueue: MessageQueueMessage[] = [];\n\n  private listeners: { [K in Events]?: EventListeners[K][] } = {};\n\n  connect(url: string, sessionId: string) {\n    this.url = `${url}/${sessionId}`;\n    if (!this.url) {\n      throw new ClientError('Can not start connection: server url not set.');\n    }\n\n    if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n      throw new ClientError('WebSocket connection is already open or opening.');\n    }\n\n    let resolvePromise: (value?: unknown) => void;\n    let rejectPromise: (value?: any) => void;\n    const promise = new Promise((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n\n    })\n    this.emitStatus(ConnectionStatus.CONNECTING);\n    this.isError = false;\n    this.isConnected = false;\n\n    try {\n      this.socket = new WebSocket(this.url);\n      this.socket.onopen = () => {\n        this.isConnected = true;\n        this.emitStatus(ConnectionStatus.CONNECTED);\n\n        resolvePromise();\n      };\n\n      this.socket.onmessage = (event) => {\n        const response = event.data;\n        if (response === 'ping' || response === 'pong') return;\n\n        if (typeof response === 'string') {\n          this.onSocketMessage(response);\n        }\n      };\n\n      this.socket.onclose = () => {\n        this.isConnected = false;\n        this.emitStatus(this.isError ? ConnectionStatus.ERROR : ConnectionStatus.DISCONNECTED);\n      };\n\n      this.socket.onerror = (event) => {\n        this.isError = true;\n        rejectPromise?.(event);\n      };\n    } catch (e) {\n      console.error(e);\n      return;\n    }\n\n    return promise;\n  }\n\n  sendMessage(message: string) {\n    this.pushMessageToQueue(message);\n    this.processQueue();\n  }\n\n  private onSocketMessage(data: string) {\n    let json = undefined;\n    let content = '';\n    let partIds = [] as string[];\n    try {\n      json = JSON.parse(data);\n      content = json.answer;\n      partIds = json.partIds;\n    } catch (e) {\n      content = data;\n    }\n    const message = {id: crypto.randomUUID(), user: 'lora', content, partIds, time: Date.now()};\n    this.addMessage(message);\n  }\n\n  private processQueue() {\n    const message = this.messagesQueue.pop();\n    if (!message) return;\n\n    this.addMessage({id: message.id, user: 'me', time: Date.now(), content: message.content})\n    this.socket?.send(message?.content);\n    message.status = MessageStatus.Sent;\n  }\n\n  private pushMessageToQueue(message: string) {\n    const id = crypto.randomUUID();\n\n    this.messagesQueue.push({\n      id,\n      content: message,\n      status: MessageStatus.Pending\n    });\n  }\n\n  private addMessage(message: ClientMessage) {\n    this.messages.push(message);\n\n    this.emitMessage(message);\n  }\n\n  private emitMessage(message: ClientMessage) {\n    this.listeners.message?.forEach(listener => {\n      try {\n        listener(message);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  private emitStatus(status: ConnectionStatus) {\n    this.listeners.status?.forEach(listener => {\n      try {\n        listener(status);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  on<T extends Events>(event: T, listener: EventListeners[T]) {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    (this.listeners[event] as any[]).push(listener);\n  }\n\n  off<K extends Events>(event: K, listener: EventListeners[K]) {\n    const data = this.listeners[event] as any[];\n    const index = data.indexOf(listener);\n\n    if (index >= 0) {\n      (this.listeners[event] as []).splice(index, 1);\n    }\n  }\n\n  getMessages() {\n    return [...this.messages];\n  }\n\n  disconnect() {\n    this.messages = [];\n    this.messagesQueue = [];\n    if (this.socket) {\n      this.socket.close(1000, \"Closed by client\");\n    }\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ClientMessage} from \"../../types/ClientMessage\";\nimport {NgClass} from \"@angular/common\";\n\n@Component({\n  selector: 'client-message',\n  standalone: true,\n  encapsulation: ViewEncapsulation.None,\n  imports: [NgClass],\n  template: `\n      <div class=\"client-message\" [ngClass]=\"{'client-message--own': message.user == 'me'}\">\n          <div class=\"client-message__content\">\n              <div [innerHTML]=\"getFormattedMessage()\"></div>\n          </div>\n      </div>`,\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent {\n  @Input() message!: ClientMessage;\n\n\n  private formatUnixTime(unixTime: number): string {\n    // Create a new JavaScript Date object based on the Unix timestamp\n    const date = new Date(unixTime * 1000);\n\n    // Get the day, month, and year from the date object\n    const day = date.getDate();\n    const month = date.getMonth() + 1; // Months are zero-indexed in JavaScript\n    const year = date.getFullYear();\n\n    // Get the hours, minutes, and seconds from the date object\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n\n    // Format the date and time components to ensure two digits for each\n    const formattedDate = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n    const formattedTime = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n\n    // Return the formatted date and time string\n    return `${formattedDate} ${formattedTime}`;\n  }\n\n  getTimeFormatted(): string {\n    return this.formatUnixTime(this.message.time);\n  }\n\n  getFormattedMessage(): string {\n    return (this.message.content || '').replace(/\\n/g, '<br>');\n  }\n}\n","import {\n  AfterViewChecked,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {FormsModule} from \"@angular/forms\";\n\n@Component({\n  selector: 'client-message-input',\n  standalone: true,\n  encapsulation: ViewEncapsulation.None,\n  imports: [FormsModule],\n  template: `<textarea\n    #textarea\n    [(ngModel)]=\"content\"\n    (input)=\"onInput()\"\n    (keydown)=\"onKeyDown($event)\"\n    class=\"client__message-input__textarea\"\n    placeholder=\"Type your message...\"></textarea>`,\n  styleUrls: ['./message-input.component.scss']\n})\nexport class ClientMessageInputComponent implements OnInit, AfterViewChecked {\n  @Input('message') message!: string;\n\n  @Output() onMessageChanged: EventEmitter<string> = new EventEmitter();\n  @Output() onEnterPressed: EventEmitter<void> = new EventEmitter();\n\n  @ViewChild('textarea') textarea!: ElementRef<HTMLTextAreaElement>;\n  content: string = '';\n\n  ngOnInit() {\n    this.content = this.message;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.content !== this.message) {\n      this.content = this.message;\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.adjustTextareaHeight();\n  }\n\n  onInput() {\n    this.adjustTextareaHeight();\n    this.onMessageChanged.emit(this.content);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault(); // Prevent the default behavior of adding a new line\n\n      this.onEnterPressed.emit();\n    }\n  }\n\n  adjustTextareaHeight() {\n    if (!this.textarea) return;\n\n    const textarea: HTMLTextAreaElement = this.textarea.nativeElement;\n    textarea.style.height = '34px'; // Reset the height\n    textarea.style.height = Math.min(textarea.scrollHeight, 180) + 'px'; // Set new height, limited to 180px\n  }\n}\n","import {Component, EventEmitter, Output, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'client-message-send',\n  standalone: true,\n  encapsulation: ViewEncapsulation.None,\n  imports: [],\n  template: `\n      <button class=\"client-message-send\" (click)=\"onClickSend.emit()\">\n          <svg class=\"client-message-send__icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <title>send</title>\n              <path d=\"M2,21L23,12L2,3V10L17,12L2,14V21Z\"/>\n          </svg>\n      </button>`,\n  styleUrl: './message-send.component.scss'\n})\nexport class MessageSendComponent {\n  @Output() onClickSend: EventEmitter<void> = new EventEmitter<void>();\n}\n","import {\n  AfterViewChecked,\n  Component,\n  ElementRef,\n  Input,\n  ViewChild,\n  ViewEncapsulation,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {ClientMessage} from \"../../types/ClientMessage\";\nimport {MessageComponent} from \"../message/message.component\";\nimport {NgForOf} from \"@angular/common\";\n\n@Component({\n  selector: 'client-messages',\n  standalone: true,\n  encapsulation: ViewEncapsulation.None,\n  imports: [\n    MessageComponent,\n    NgForOf\n  ],\n  template: `\n    <div #container class=\"client-messages\">\n      <div class=\"client-messages__inner\">\n        <client-message *ngFor=\"let msg of messages\" [message]=\"msg\"></client-message>\n      </div>\n    </div>`,\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnChanges {\n  @Input() messages: ClientMessage[] = [];\n\n  @ViewChild('container') container!: ElementRef<HTMLDivElement>;\n\n  private previousMessagesLength = 0;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['messages']) {\n      const currentMessagesLength = changes['messages'].currentValue.length;\n      if (currentMessagesLength !== this.previousMessagesLength) {\n        this.previousMessagesLength = currentMessagesLength;\n\n        setTimeout(() => {\n          this.scrollBottom();\n        }, 250);\n      }\n    }\n  }\n\n  scrollBottom() {\n    if (!this.container) return;\n    const el = this.container.nativeElement;\n    el.scrollTop = el.scrollHeight;\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {FormsModule} from \"@angular/forms\";\nimport {NgFor, NgIf, NgStyle} from \"@angular/common\";\nimport {ConnectionStatus, LoraClientService} from '../../services/lora-client.service';\nimport {MessageComponent} from \"../message/message.component\";\nimport {ClientMessageInputComponent} from \"../message-input/message-input.component\";\nimport {MessageSendComponent} from \"../message-send/message-send.component\";\nimport {ClientMessage} from \"../../types/ClientMessage\";\nimport {MessagesComponent} from \"../messages/messages.component\";\n\n@Component({\n  selector: 'lora-client',\n  standalone: true,\n  imports: [FormsModule, NgFor, MessageComponent, ClientMessageInputComponent, MessageSendComponent, MessagesComponent, NgStyle, NgIf],\n  template: `\n    <div class=\"client__container\" [ngStyle]=\"{height:height+'px'}\">\n\n      <ng-container *ngIf=\"status === ConnectionStatus.CONNECTED\">\n        <client-messages class=\"client__messages\" [messages]=\"messages\"/>\n\n        <div class=\"client__input\">\n          <client-message-input\n            class=\"client__input-message\"\n            [message]=\"message\"\n            (onMessageChanged)=\"onMessageChanged($event)\"\n            (onEnterPressed)=\"onEnterPressed()\"\n          />\n\n          <client-message-send class=\"client__input-submit\" (onClickSend)=\"sendMessage()\"/>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"status===ConnectionStatus.DISCONNECTED\">\n        <div class=\"client__status\">Disconnected</div>\n      </ng-container>\n      <ng-container *ngIf=\"status===ConnectionStatus.CONNECTING\">\n        <div class=\"client__status\">Connecting...</div>\n      </ng-container>\n      <ng-container *ngIf=\"status===ConnectionStatus.ERROR\">\n        <div class=\"client__status\">\n          <div>Connection Failed</div>\n          <div>\n\n            <button (click)=\"onClickReconnect()\">Try again</button>\n          </div>\n        </div>\n      </ng-container>\n    </div>`,\n  encapsulation: ViewEncapsulation.ShadowDom,\n  styleUrls: ['./lora-client.component.scss']\n})\nexport class LoraClient implements OnInit, OnDestroy {\n  @Input('sessionUrl') sessionUrl = '';\n  @Input('socketUrl') socketUrl = '';\n  @Input('height',) height = 500;\n\n  @Output() onMessage: EventEmitter<ClientMessage> = new EventEmitter<ClientMessage>();\n\n  messages: ClientMessage[] = [];\n  message: string = '';\n  status = ConnectionStatus.DISCONNECTED;\n\n  private onMessageListener: OmitThisParameter<(message: ClientMessage) => void>;\n  private onStatusListener: OmitThisParameter<(status: ConnectionStatus) => void>;\n\n  constructor(private loraClientService: LoraClientService) {\n    this.onMessageListener = this.onMessageReceived.bind(this);\n    this.onStatusListener = this.onStatus.bind(this);\n    this.loraClientService.on('message', this.onMessageListener);\n    this.loraClientService.on('status', this.onStatusListener);\n  }\n\n  ngOnInit() {\n    this.connect().then();\n  }\n\n  async connect() {\n    this.status = ConnectionStatus.CONNECTING;\n    try {\n      const response = await window.fetch(this.sessionUrl);\n      const sessionId = response.status === 200 ? await response.text() : undefined;\n\n      if (!sessionId) {\n        console.error(\"Failed to receive session id\");\n        this.status = ConnectionStatus.ERROR;\n        return;\n      }\n\n      await this.loraClientService.connect(this.socketUrl, sessionId);\n    } catch (e) {\n      console.error(e);\n      this.status = ConnectionStatus.ERROR;\n    }\n  }\n\n  sendMessage() {\n    if (this.message.trim()) {\n      this.loraClientService.sendMessage(this.message);\n      this.message = '';\n    }\n  }\n\n  onMessageChanged(message: string) {\n    this.message = message;\n  }\n\n  onEnterPressed() {\n    this.sendMessage();\n  }\n\n  onClickReconnect() {\n    this.connect().then();\n  }\n\n  onMessageReceived(message: ClientMessage) {\n    this.messages = this.loraClientService.getMessages();\n\n    if (message.user !== 'me') {\n      this.onMessage.emit(message);\n    }\n  }\n\n  onStatus(status: ConnectionStatus) {\n    this.status = status;\n  }\n\n  ngOnDestroy(): void {\n    this.loraClientService.disconnect();\n    this.loraClientService.off('message', this.onMessageListener);\n    this.loraClientService.off('status', this.onStatusListener);\n  }\n\n  protected readonly ConnectionStatus = ConnectionStatus;\n}\n","/*\n * Public API Surface of client\n */\n\nexport * from './lib/client/lora-client.component';\nexport * from './types/ClientMessage';\nexport * from './types/ClientError';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.LoraClientService"],"mappings":"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"}